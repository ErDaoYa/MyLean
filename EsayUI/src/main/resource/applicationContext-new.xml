<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<!-- 读取配置文件 -->
	<context:property-placeholder location="classpath*:general.properties" />
	
	<!--激活annotation功能 -->
    <context:annotation-config />
    <context:spring-configured />  
    
    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />
    
	<!-- 扫描包下注解标记，把他们注册为spring bean -->
	<context:component-scan base-package="com.zhao.esayui" />
	
	<!-- 定义datasource，给template注入 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
	destroy-method="close" init-method="init" p:driverClassName="${jdbc.driverClassName}"
	p:url="${jdbc.url}" p:username="${jdbc.userName}" p:password="${jdbc.password}"
	p:connectionProperties="druid.stat.slowSqlMillis=5000;druid.stat.logSlowSql=true"
	p:removeAbandoned="true" p:removeAbandonedTimeout="3600"
	p:logAbandoned="true" p:minIdle="1" p:maxActive="10"
	p:poolPreparedStatements="true"
	p:maxPoolPreparedStatementPerConnectionSize="20" p:initialSize="1"
	p:maxWait="60000" p:timeBetweenEvictionRunsMillis="60000" p:filters="stat,slf4j" >
	<description>数据源配置</description>
	</bean> 
	<!-- <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close" init-method="init"
		p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.url}"
		p:username="${jdbc.userName}"
		p:password="${jdbc.password}" >
	</bean> -->
	
	<!-- mybatis sqlSession -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	  	<property name="configLocation" value="classpath:config/mybatis-configuration.xml" />
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>
	

	<!-- 对于spring4，json返回给页面特别需要以下配置，注意Jackson2和Jackson1下面的class不一样 
		还须引入相关jar包：jackson-core,jackson-annotations,jackson-databind(pom只需最后一个就会自动依赖下载！！)
	-->
	<bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJackson2HttpMessageConverter" />  
            </list>  
        </property>  
    </bean>  
    <bean id="mappingJackson2HttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
                <value>text/json;charset=UTF-8</value>  
                <value>application/json;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean> 
    
	<!-- 注解事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"> </property>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*"   propagation="REQUIRED" rollback-for="Exception" />
        </tx:attributes>
    </tx:advice>
    <!-- <aop:aspectj-autoproxy/> -->
    <!-- 通过AOP实现横向切入 -->
    <aop:config>
    	<!-- * com中间的空格不能少 -->
        <aop:advisor pointcut="execution(* com.zhao.esayui.service.impl.*.*(..))" advice-ref="txAdvice"/>
    </aop:config>
	
	<!-- 开启事务注解@Transactional配置 -->
	<tx:annotation-driven  transaction-manager="txManager"/>
</beans>